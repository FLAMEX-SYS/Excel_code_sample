SELECT
  ROUND(favi.cvss_score, 1) AS "CVSS Score",
  favi.severity AS Severity,
  da.ip_address AS "IP Address",
  CASE WHEN fcal.success IS NULL THEN da.host_name
       ELSE CONCAT('Active - ', da.host_name) END AS "Host",
  das.name AS Site,
  dos.name AS "OS",
  dos.version AS "OS Version",
  dw.title AS "Vulnerability",
  proofAsText(favi.proof) AS "Proof",
  proofAsText(ds.fix) AS "Steps",
  vcves.cves AS "CVE",
  dv.title AS "Date Published",
  favi.assessed_on AS "Last Scanned",
  CASE WHEN fcal.success IS NULL THEN 'Non-Active'
       ELSE 'Active' END AS "Active Status"
FROM fact_asset_vulnerability_instance favi
INNER JOIN dim_asset da ON favi.asset_id = da.asset_id
INNER JOIN dim_site_asset das ON da.asset_id = das.asset_id
INNER JOIN dim_operating_system dos ON da.operating_system_id = dos.operating_system_id
INNER JOIN dim_vulnerability dw ON favi.vulnerability_id = dw.vulnerability_id
LEFT JOIN dim_solution ds ON favi.solution_id = ds.solution_id
INNER JOIN (
  SELECT vulnerability_id, array_to_string(array_agg(reference), ', ') AS cves
  FROM dim_vulnerability_reference
  WHERE source = 'CVE'
  GROUP BY vulnerability_id
) vcves ON favi.vulnerability_id = vcves.vulnerability_id
INNER JOIN (
  SELECT asset_id, vulnerability_id, COALESCE(dss.superceding_solution_id, davs.solution_id) AS solution_id
  FROM dim_asset_vulnerability_solution davs
  LEFT JOIN dim_solution_supercedence dss ON davs.solution_id = dss.solution_id
) sol ON favi.asset_id = sol.asset_id AND favi.vulnerability_id = sol.vulnerability_id
LEFT JOIN fact_credential_attempt fcal ON da.asset_id = fcal.asset_id
WHERE vcves.cves IN ('CVE-2023-4663', 'CVE-2023-331366', 'CVE-2023-43323', 'CVE-2022-41303') -- Add more CVEs here
AND favi.assessed_on >= DATE_SUB(CURRENT_DATE(), INTERVAL 15 DAY);
